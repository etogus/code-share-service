rootProject.name = 'code-sharing-platform'

// Function to sanitize project names
static String sanitizeName(String name) {
    return name.replaceAll("[ /\\\\:<>\"?*|()]", "_").replaceAll("(^[.]+)|([.]+\$)", "")
}

// Recursively include all valid project directories
rootProject.projectDir.eachDirRecurse {
    if (!isTaskDir(it) || it.path.contains(".idea")) {
        return
    }
    def taskRelativePath = rootDir.toPath().relativize(it.toPath())
    def parts = []
    for (name in taskRelativePath) {
        parts.add(sanitizeName(name.toString()))
    }
    def moduleName =  parts.join("-")
    include "$moduleName"
    project(":$moduleName").projectDir = it
}

// Helper function to determine if a directory is a valid project directory
def isTaskDir(File dir) {
    return new File(dir, "src").exists() || new File(dir, "test").exists()
}